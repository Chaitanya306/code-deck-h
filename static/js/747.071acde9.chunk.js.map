{"version":3,"file":"static/js/747.071acde9.chunk.js","mappings":"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","sources":["Components/ModalTypes/NewFolder.js","Components/ModalTypes/NewPlayGround.js","Components/ModalTypes/NewPlayGroundAndFolder.js","Components/ModalTypes/EditFolder.js","Components/ModalTypes/EditPlayGroundTitle.js","Components/ModalTypes/Loading.js","Components/Modal.js","Components/Home/LeftPanelHomeScreen.js","Components/Card.js","Components/Home/RightPanelHomeScreen.js","Pages/Home.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlaygroundContext } from '../../Context/PlaygroundContext'\r\n\r\nfunction NewFolder() {\r\n  const { closeModal } = useContext(ModalContext)\r\n  const { addFolder } = useContext(PlaygroundContext)\r\n  const [folderTitle, setFolderTitle] = useState(\"\")\r\n\r\n  return (\r\n    <>\r\n      <div className='flex flex-row justify-end p-4'>\r\n        <RxCross1 className='cursor-pointer' onClick={(() => { closeModal() })} />\r\n      </div>\r\n      <div className='px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6'>\r\n        <h2>Create a New Folder</h2>\r\n        <input type=\"text\" onChange={(e) => setFolderTitle(e.target.value)} value={folderTitle} placeholder=\"Please enter folder title\" className='border-[.5px] text-sm border-gray rounded-lg shadow-sm p-2 w-full' />\r\n        <button className='p-3 w-36 text-black bg-white rounded-lg font-semibold border-[.5px] border-gray shadow-lg' onClick={() => {\r\n          addFolder(folderTitle)\r\n          closeModal()\r\n        }}>Create Folder</button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewFolder\r\n","import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlaygroundContext } from '../../Context/PlaygroundContext'\r\nimport Select from \"react-select\"\r\n\r\nfunction NewPlayGround() {\r\n  const { isOpenModal, closeModal } = useContext(ModalContext)\r\n  const { addPlayground } = useContext(PlaygroundContext)\r\n  const languageOptions = [\r\n    { value: \"javascript\", label: \"javascript\" },\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"cpp\", label: \"cpp\" },\r\n  ]\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n  const [cardTitle, setCardTitle] = useState(\"\")\r\n  const [language, setLanguage] = useState(languageOptions[0]);\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\"px-6 py-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2> Create a New PlayGround</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={cardTitle}\r\n          onChange={(e) => setCardTitle(e.target.value)}\r\n          placeholder=\"please enter playground title\"\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <Select\r\n          options={languageOptions}\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[0.5px] border-gray-50 shadow-lg\"\r\n          onClick={() => {\r\n            addPlayground(folderId, cardTitle, language.value);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Create PlayGround\r\n        </button>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPlayGround\r\n","import React, { useState, useContext } from 'react'\r\nimport { RxCross1 } from 'react-icons/rx'\r\nimport { ModalContext } from '../../Context/ModalContext'\r\nimport { PlaygroundContext } from '../../Context/PlaygroundContext'\r\nimport Select from 'react-select'\r\n\r\nfunction NewPlayGroundAndFolder() {\r\n  const { closeModal } = useContext(ModalContext)\r\n  const { addPlaygroundAndFolder } = useContext(PlaygroundContext)\r\n\r\n  const languageOptions = [\r\n    { value: \"javascript\", label: \"javascript\" },\r\n    { value: \"python\", label: \"python\" },\r\n    { value: \"java\", label: \"java\" },\r\n    { value: \"cpp\", label: \"cpp\" },\r\n  ];\r\n\r\n  const [folderName, setFolderName] = useState(\"\")\r\n  const [playgroundName, setPlaygroundName] = useState(\"\")\r\n  const [language, setLanguage] = useState(languageOptions[0])\r\n\r\n  const handleLanguageChange = (selectedOption) => {\r\n    setLanguage(selectedOption)\r\n  }\r\n  return (\r\n    <>\r\n      <div className='flex flex-row justify-end p-4'>\r\n        <RxCross1 className='cursor-pointer' onClick={ ()=>{closeModal()}}/>\r\n      </div>\r\n      <div className='px-6 py-4 mb-8 flex flex-col items-center justify-center bap-6'>\r\n        <h2>Create a New PlayGround & New Folder</h2>\r\n        <div className='flex flex-col w-full '>\r\n          <label>Enter Folder Name</label>\r\n          <input type=\"text\" value={folderName} placeholder=\"Please Enter Folder Name\" onChange={(e)=> setFolderName(e.target.value)} className=\"boder-[0.5px] text-sm border-gray-50 rounded-lg p-2 w-full\" />\r\n        </div>\r\n        <div className='flex flex-col w-full'>\r\n          <label>Enter Playground Name</label>\r\n          <input type=\"text\" value={playgroundName} placeholder=\"Please Enter Playground Name\" onChange={(e)=>setPlaygroundName(e.target.value)} className=\"border=[0.5px] text-sm border-gray-50 rounder-lg p-2 w-full\"/>\r\n        </div>\r\n        <Select options={languageOptions} value={language} onChange={handleLanguageChange}/>\r\n        <button className='p-3 w-36 text-black rounder-lg font-semibold border-[0.5px] border-gray-50 shadow-lg'\r\n         onClick={()=>{\r\n          addPlaygroundAndFolder(folderName, playgroundName, language.value)\r\n          closeModal()\r\n         }}>Create Folder & Playground</button>\r\n      </div>\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default NewPlayGroundAndFolder\r\n\r\n","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nfunction EditFolder() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n\r\n  const { editFolderTitle, folders } = useContext(PlaygroundContext);\r\n\r\n  const { folderId } = isOpenModal.identifiers;\r\n\r\n  const [folderTitle, setFolderTitle] = useState(folders[folderId].title);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 my-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Edit Folder</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={folderTitle}\r\n          onChange={(e) => setFolderTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[0.5px] border-gray-50 shadow-lg\"\r\n          onClick={() => {\r\n            editFolderTitle(folderId, folderTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Proceed\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditFolder;","import React, { useState, useContext } from \"react\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nfunction EditPlayGroundTitle() {\r\n  const { closeModal, isOpenModal } = useContext(ModalContext);\r\n\r\n  const { editPlaygroundTitle, folders } = useContext(PlaygroundContext);\r\n\r\n  const { folderId, cardID } = isOpenModal.identifiers;\r\n\r\n  const [playgroundTitle, setPlaygroundTitle] = useState(\r\n    folders[folderId].playgrounds[cardID].title\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row justify-end p-4\">\r\n        <RxCross1 className=\"cursor-pointer\" onClick={() => closeModal()} />\r\n      </div>\r\n      <div className=\" px-6 my-4 mb-8 flex flex-col items-center justify-center gap-6\">\r\n        <h2>Edit PlayGround</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={playgroundTitle}\r\n          onChange={(e) => setPlaygroundTitle(e.target.value)}\r\n          className=\"border-[.5px] text-sm border-gray-50 rounded-lg shadow-sm p-2 w-full\"\r\n        />\r\n        <button\r\n          className=\"p-3 w-36 text-black bg-white rounded-lg font-semibold border-[0.5px] border-gray-50 shadow-lg\"\r\n          onClick={() => {\r\n            editPlaygroundTitle(folderId, cardID, playgroundTitle);\r\n            closeModal();\r\n          }}\r\n        >\r\n          Proceed\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditPlayGroundTitle;","import React from 'react'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>...Loading</div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import { useContext } from \"react\";\r\nimport { ModalContext } from \"../Context/ModalContext\";\r\nimport {\r\n  NewFolder,\r\n  NewPlayGround,\r\n  NewPlayGroundAndFolder,\r\n  EditFolder,\r\n  EditPlayGroundTitle,\r\n  Loading,\r\n} from \"./ModalTypes\";\r\n\r\nfunction Modal() {\r\n  const { isOpenModal } = useContext(ModalContext);\r\n  const { modalType } = isOpenModal;\r\n  // ModalTypes\r\n  // 1: NewFolder\r\n  // 2: New Playground\r\n  // 3: New Playground and Folder\r\n  // 4: Rename folder\r\n  // 5: Rename Playground\r\n  return (\r\n    <div className=\"flex justify-center items-center overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\r\n      <div\r\n        className=\"relative w-auto my-6 mx-auto max-w-3xl\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n        }}\r\n      >\r\n        <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-[30rem] bg-white outline-none focus:outline-none\">\r\n          {modalType === 1 && <NewFolder />}\r\n          {modalType === 2 && <NewPlayGround />}\r\n          {modalType === 3 && <NewPlayGroundAndFolder />}\r\n          {modalType === 4 && <EditFolder />}\r\n          {modalType === 5 && <EditPlayGroundTitle />}\r\n          {modalType === 6 && <Loading />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Modal;","import React,{ useContext } from 'react'\r\nimport { ModalContext } from \"../../Context/ModalContext\";\r\nimport logo from '../../Images/logo.png';\r\nconst LeftPanelHomeScreen = () => {\r\n  const { openModal } = useContext(ModalContext);\r\n  return (\r\n    <div className='border-2 border-black h-screen bg-black flex justify-end'>\r\n      <div className='mx-auto flex flex-col items-center justify-center gap-3'>\r\n        <img src={logo} alt='logo' />\r\n        <h3 className='font-semibold text-white'>Code Deck</h3>\r\n        <h3 className='font-semibold text-white'>Code. Compile. Debug</h3>\r\n        <button\r\n          className=\"w-full p-4 bg-white shadow-lg rounded-lg drop-shadow-2xl\"\r\n          onClick={() =>\r\n            openModal({\r\n              show: true,\r\n              modalType: 3,\r\n              identifiers: {\r\n                folderId: \"\",\r\n                cardID: \"\",\r\n              },\r\n            })\r\n          }\r\n        >\r\n          + Create New PlayGround\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftPanelHomeScreen\r\n","import React from 'react'\r\n\r\nconst Card = ({children}) => {\r\n  return (\r\n    <div className='hover:scale-105 bg-105 h-auto drop-shadow-xl rounded-lg p-6 ease-in-out duration-500'>\r\n      <div>{children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useContext } from 'react'\r\nimport { FcOpenedFolder } from 'react-icons/fc'\r\nimport { BiEditAlt } from 'react-icons/bi'\r\nimport { IoTrashOutline } from 'react-icons/io5'\r\nimport Card from '../Card'\r\nimport { ModalContext } from \"../../Context/ModalContext\"\r\nimport { PlaygroundContext } from \"../../Context/PlaygroundContext\";\r\nimport { useNavigate } from 'react-router-dom'\r\nimport logoSmall from '../../Images/logoSmall.png'\r\n\r\nconst RightPanelHomeScreen = () => {\r\n    const navigate = useNavigate()\r\n    const { openModal } = useContext(ModalContext)\r\n    const { folders, deleteFolder, deleteCard } = useContext(PlaygroundContext);\r\n    return (\r\n        <div className='boder-2 border-black h-screen p-8'>\r\n            <div className='flex justify-between items-center'>\r\n                <h2>My <span className='font-semibold text-2x'>PlayGround</span></h2>\r\n                <h4 className='cursor-pointer' onClick={() =>\r\n                    openModal({\r\n                        show: true,\r\n                        modalType: 1,\r\n                        identifiers: {\r\n                            folderId: \"\",\r\n                            cardID: \"\",\r\n                        },\r\n                    })\r\n                }><span className='font-semibold text-2xl'>+</span>New Folder</h4>\r\n            </div>\r\n            <hr className='mb-12 ht-4 bg-black' />\r\n            {Object.entries(folders).map(([folderId, folder]) => (\r\n                <div className='flex flex-col my-8'>\r\n                    <div className='flex justify-between items-cecter'>\r\n                        <div className='flex items-center'>\r\n                            <FcOpenedFolder size={\"2em\"} />\r\n                            <h3 className='font-semibold'>{folder.title}</h3>\r\n                        </div>\r\n                        <div className='flex gap-4 items-center'>\r\n                            <BiEditAlt className='cursor-pointer' size={\"1.5em\"} onClick={() => {\r\n                                openModal({\r\n                                    show: true,\r\n                                    modalType: 4,\r\n                                    identifiers: {\r\n                                        folderId: folderId,\r\n                                        cardID: \"\",\r\n                                    },\r\n                                });\r\n                            }} />\r\n                            <IoTrashOutline className='cursor-pointer' size={\"1.5em\"} onClick={() => { deleteFolder(folderId) }} />\r\n                            <h4 className='cursor-pointer'\r\n                                onClick={() => {\r\n                                    openModal({\r\n                                        show: true,\r\n                                        modalType: 2,\r\n                                        identifiers: {\r\n                                            folderId: folderId,\r\n                                            cardID: \"\",\r\n                                        },\r\n                                    });\r\n                                }}\r\n                            >\r\n                                + New playground\r\n                            </h4>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <hr className='mb-12 ht-4 bg-black' />\r\n                    <div className='grid grid-cols-1 md:grid-cols-2 gap-4'>\r\n                        {Object.entries(folder[\"playgrounds\"]).map(\r\n                            ([playgroundId, playground]) => (\r\n                                <Card key={playgroundId}>\r\n                                    <div className=\"flex items-center justify-between\"\r\n                                        onClick={(e) => {\r\n                                            e.stopPropagation()\r\n                                            navigate(`/code/${folderId}/${playgroundId}`)\r\n                                        }}\r\n                                    >\r\n                                        <div className=\"flex gap-4 cursor-pointer\">\r\n                                            <img src={logoSmall} alt=\"logo\" />\r\n                                            <div>\r\n                                                <h4>{playground.title}</h4>\r\n                                                <h4>language: {playground.language}</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex gap-4 items-center\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation()\r\n                                            }}\r\n                                        >\r\n                                            <BiEditAlt\r\n                                                size={\"1.5em\"}\r\n                                                className='cursor-pointer'\r\n                                                onClick={() =>\r\n                                                    openModal({\r\n                                                        show: true,\r\n                                                        modalType: 5,\r\n                                                        identifiers: {\r\n                                                            folderId: folderId,\r\n                                                            cardID: playgroundId,\r\n                                                        },\r\n                                                    })\r\n                                                }\r\n                                            />\r\n                                            <IoTrashOutline\r\n                                                size={\"1.5em\"}\r\n                                                className='cursor-pointer'\r\n                                                onClick={() => deleteCard(folderId, playgroundId)}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </Card>\r\n                            )\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            ))}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RightPanelHomeScreen\r\n","import React,{useContext} from 'react'\r\nimport LeftPanelHomeScreen from '../Components/Home/LeftPanelHomeScreen'\r\nimport RightPanelHomeScreen from '../Components/Home/RightPanelHomeScreen'\r\nimport { ModalContext } from \"../Context/ModalContext\"\r\n\r\nimport Modal from \"../Components/Modal\"\r\nconst Home = () => {\r\n  const { isOpenModal } = useContext(ModalContext);\r\n  return (\r\n    <div className='grid grid-cols-1 lg:grid-cols-2'>\r\n      <div className='sm:w-full md:w-full w-5/12' >\r\n        <LeftPanelHomeScreen />\r\n      </div>\r\n      <div className='sm:w-full md:w-full w-7/12'>\r\n        <RightPanelHomeScreen />\r\n      </div>\r\n      {isOpenModal.show && <Modal />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"names":["closeModal","useContext","ModalContext","addFolder","PlaygroundContext","useState","folderTitle","setFolderTitle","className","onClick","type","onChange","e","target","value","placeholder","isOpenModal","addPlayground","languageOptions","label","folderId","identifiers","cardTitle","setCardTitle","language","setLanguage","options","selectedOption","addPlaygroundAndFolder","folderName","setFolderName","playgroundName","setPlaygroundName","editFolderTitle","folders","title","editPlaygroundTitle","cardID","playgrounds","playgroundTitle","setPlaygroundTitle","modalType","stopPropagation","openModal","src","logo","alt","show","children","navigate","useNavigate","deleteFolder","deleteCard","Object","entries","map","folder","size","playgroundId","playground","Modal"],"sourceRoot":""}